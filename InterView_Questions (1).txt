Difference between Task vs Thread
Explain OOPS all the concepts with practical examples
Explain SOLID principle with practical examples
What are  the constructor types?
what is middleware?
What are the Filters in Web API ?
Can we use Get logics in POST apis ?
How you authenticate you api ?
Difference between Inheritance vs Extension Methods
What is Delegeate and where it can be used?
What is Events and where it can be used ?
What is static constructor ?
What is shadowing ?

Difference between Observable vs promise ?
What are the Major building blocks of angular?
What is Component?
What is Directive and types?
What is Pipe and types?
What is routing?

What is stored procedure?
Difference between Delete vs truncate?

Problems
1.) You are given a list of n-1 integers and these integers are in the range of 1 to n. 
There are no duplicates in the list. One of the integers is missing in the list. 
Write an efficient code to find the missing integer.

Example: Input: arr[] = {1, 2, 4, 6, 3, 7, 8}

Output: 5

2.) You are given an array of 0s and 1s in random order. 
Segregate 0s on left side and 1s on right side of the array. Traverse array only once.

Input array   =  [0, 1, 0, 1, 0, 0, 1, 1, 1, 0]

Output array =  [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]

3.) Write an extension method for the string which accepts two input one is string and another is char and it should return the number of occurence of the given charater in the string

Input: "Sudhakar", 'a'
Output: 2

4.) What is the output of the below code and explain why?
public class TestStatic
{
    public static int TestValue;
    public TestStatic()
    {
        if (TestValue == 0)
        {
            TestValue = 5;
        }
    }
    static TestStatic()
    {
        if (TestValue == 0)
        {
            TestValue = 10;
        }
    }
    public void Print()
    {
        if (TestValue == 5)
        {
            TestValue = 6;
        }
        Console.WriteLine("TestValue : " + TestValue);
    }
}
public void Main(string[] args)
{
    TestStatic t = new TestStatic();
    t.Print();
}